#include<graphics.h>
#include<iostream.h>
#include<conio.h>
#include <math.h>
#include<dos.h>

void bezier(int x[] , int y[])
{

    double xu = 0.0 , yu = 0.0 , u = 0.0 ;

    int i = 0 ;

    for(u = 0.0 ; u <= 1.0 ; u += 0.0001)

    {

	xu = pow(1-u,3)*x[0]+3*u*pow(1-u,2)*x[1]+3*pow(u,2)*(1-u)*x[2]+pow(u,3)*x[3];

	yu = pow(1-u,3)*y[0]+3*u*pow(1-u,2)*y[1]+3*pow(u,2)*(1-u)*y[2]+pow(u,3)*y[3];

	putpixel(xu,yu,BLUE);

    }
}


void koch(int x1, int y1, int x2, int y2, int i)
{
int x3,y3,x4,y4,x,y;
float angle = 60*3.14/180,c,s;

s=sin(angle);
c=cos(angle);

x3 = (2*x1+x2)/3;
y3 = (2*y1+y2)/3;

x4 = (x1+2*x2)/3;
y4 = (y1+2*y2)/3;

x = x3 + (x4-x3)*c+(y4-y3)*s;
y = y3 - (x4-x3)*s+(y4-y3)*c;

if(i > 0)
{

koch (x1, y1, x3, y3, i-1);
koch (x3, y3, x, y, i-1);
koch (x, y, x4, y4, i-1);
koch (x4, y4, x2, y2, i-1);

}

else
{
line (x1, y1, x3, y3);
delay(20);
line (x3, y3, x, y);
delay(20);
line (x, y, x4, y4);
delay(20);
line (x4, y4, x2, y2);
delay(20);
}
}

void main()
{
int gd=DETECT, gm;
initgraph(&gd, &gm, "C://TURBOC3//BGI");
int i,x[4]={50,150,250,350},y[4]={100,50,50,100};
cout<<"Enter no. of itterations : ";
cin>>i;
cleardevice();
setcolor(YELLOW);
koch (200, 100, 400, 300,i);
setcolor(GREEN);
koch (400, 300,0,300,i);
setcolor(RED);
koch (0,300,200, 100,i);

bezier(x,y);

getch();
}
